@using emeal.Models
@model IEnumerable<emeal.Models.Recipe>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<div class="panel-body">
    @Html.ActionLink("Create New", "Create", "Recipe", null, new { @class = "btn btn-success btn-default" })
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PathToImage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DifficultyLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WhenAdded)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ingredients)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Steps)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EstimatedTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Popularity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th>
            <div class="dropdown pull-right">
                <button class="btn btn-xs btn-primary dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort By
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu1">
                    <li>@Html.ActionLink("Popularity", "Index", new { sortOrder = "popularity", searchName = ViewBag.searchName})</li>
                    <li>@Html.ActionLink("Name", "Index", new {sortOrder = "name", searchName = ViewBag.searchName })</li>
                    <li>@Html.ActionLink("Rating", "Index", new { sortOrder = "rating", searchName = ViewBag.searchName })</li>
                    <li>@Html.ActionLink("Difficulty", "Index", new {sortOrder = "difficulty", searchName = ViewBag.searchName })</li>
                    <li>@Html.ActionLink("Time", "Index", new {sortOrder = "time", searchName = ViewBag.searchName })</li>
                </ul>
            </div>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PathToImage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DifficultyLevel)
            </td>
            <td>
                @{ var shortValue = item.WhenAdded.ToShortDateString(); }
                @Html.DisplayFor(modelItem => shortValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ingredients)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Steps)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstimatedTime) min
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Popularity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.Id})
                @Html.ActionLink("Details", "Details", new {id = item.Id})
                @Html.ActionLink("Delete", "Delete", new {id = item.Id})
            </td>
        </tr>
    }

</table>