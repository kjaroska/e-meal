@model IEnumerable<emeal.Models.Recipe>
@{ ViewBag.Title = "Index"; }

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Create New", "Create", "Recipe", null, new {@class = "btn btn-success btn-default"})
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DifficultyLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WhenAdded)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ingredients)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Steps)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EstimatedTime)
        </th>
        <th>
            <div class="dropdown pull-right">
                <button class="btn btn-xs btn-primary dropdown-toggle" type="button" id="sortByDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort By
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="sortByDropdown">
                    <li>@Html.ActionLink("Popularity", "Index", new {sortOrder = "popularity", ViewBag.SearchName})</li>
                    <li>@Html.ActionLink("Name", "Index", new {sortOrder = "name", ViewBag.SearchName})</li>
                    <li>@Html.ActionLink("Rating", "Index", new {sortOrder = "rating", ViewBag.SearchName})</li>
                    <li>@Html.ActionLink("Difficulty", "Index", new {sortOrder = "difficulty", ViewBag.SearchName})</li>
                    <li>@Html.ActionLink("Time", "Index", new {sortOrder = "time", ViewBag.SearchName})</li>
                </ul>
            </div>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PathToImage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DifficultyLevel)
                </td>
                <td>
                    @{ var shortValue = item.WhenAdded.ToShortDateString(); }
                    @Html.DisplayFor(modelItem => shortValue)
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-xs btn-primary dropdown-toggle" type="button" class="ingredients-dropdown" data-toggle="dropdown">
                            @Html.DisplayFor(modelItem => item.Ingredients.Count)
                            <span class="caret"></span>
                        </button>
                        @if (item.Ingredients.Count != 0)
                        {
                            <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="ingredients-dropdown">
                                @foreach (var ingredient in item.Ingredients)
                                {
                                    <li>
                                        @Html.DisplayFor(ingredientItem => ingredient.Product.PathToImage)
                                        @Html.DisplayFor(ingredientItem => ingredient.Product.Name)
                                        @Html.DisplayFor(ingredientItem => ingredient.Amount)
                                        @Html.DisplayFor(ingredientItem => ingredient.UnitType)
                                        <br/>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-xs btn-primary dropdown-toggle" type="button" class="steps-dropdown" data-toggle="dropdown">
                            @Html.DisplayFor(modelItem => item.Steps.Count)
                            <span class="caret"></span>
                        </button>
                        @if (item.Steps.Count != 0)
                        {
                            <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="steps-dropdown">

                                @foreach (var step in item.Steps)
                                {
                                    <li>
                                        @Html.DisplayFor(stepItem => step.Name)
                                        @Html.DisplayFor(stepstepItem => step.Order)
                                        @Html.DisplayFor(stepItem => step.PathToImage)
                                        @Html.DisplayFor(stepItem => step.Timer)
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimatedTime) min
                </td>
            <td class="btn-group">
                <a href=@Href(Url.Action("Details", "Recipe", new {id = item.Id})) class="btn btn-xs">
                    <span class='glyphicon glyphicon-info-sign'></span>
                    </a>
                <a href=@Href(Url.Action("Edit", "Recipe", new {id = item.Id})) class="btn btn-xs">
                    <span class='glyphicon glyphicon-pencil'></span>
                </a>
                <a href=@Href(Url.Action("Details", "Recipe", new {id = item.Id})) class="btn btn-xs">
                    <span class='glyphicon glyphicon-remove'></span>
                </a>
            </td>
        </tr>
    }

</table>