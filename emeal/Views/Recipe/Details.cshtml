@model emeal.Models.Recipe
@{ ViewBag.Title = Html.DisplayFor(model => model.Name); }

<div id="recipe-details">
    <div id="recipe-details-top">
            <a><img src="@Html.ValueFor(model => model.PathToImage)"  class="img-responsive center-block"/></a>
        <div class="container-fluid">
            <table class="table table-hover">
                <tr class="info">
                    <td width="12%"><span class="glyphicon glyphicon-user"> @Html.ValueFor(model => model.Author.Name)</span></td>
                    <td width="12%"><span class="glyphicon glyphicon-stats"> @Html.ValueFor(model => model.DifficultyLevel)</span></td>
                    <td width="12%"><span class="glyphicon glyphicon-time"> @Html.ValueFor(model => model.EstimatedTime)</span></td>
                    <td width="12%"><span class="glyphicon glyphicon-thumbs-up"> @Html.ValueFor(model => model.Popularity)</span></td>
                    <td width="12%"><span class="glyphicon glyphicon-star"> @Html.ValueFor(model => model.Rating)</span></td>
                </tr>
            </table>
        </div>
        <h2><strong>@Html.ValueFor(model => model.Name)</strong></h2>
        <h4><strong>@Html.ValueFor(model => model.Description)</strong></h4>
        <div id="recipe-details-middle">
        <div class="dropdown" id="ingredient-dropdown">
            <button class="btn btn-lg btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                @Html.DisplayNameFor(model => model.Ingredients)
                <span class="caret"></span>
            </button>
            @if (Model.Ingredients.Count != 0)
            {
                <ul class="dropdown-menu dropdown-menu-right ingredient-dropdown-content">
                    @foreach (var ingredient in Model.Ingredients)
                    {
                        <li>
                            <strong>@Html.DisplayFor(ingredientItem => ingredient.Product.Name)</strong>
                            <p>
                                @Html.DisplayFor(ingredientItem => ingredient.Amount)
                                @Html.DisplayFor(ingredientItem => ingredient.UnitType)</p>
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="dropdown" id="step-dropdown">
            <button class="btn btn-lg btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                @Html.DisplayNameFor(modelItem => Model.Steps)
                <span class="caret"></span>
            </button>
            @if (Model.Steps.Count != 0)
            {
                <ul class="dropdown-menu dropdown-menu-right step-dropdown-content">
                    @foreach (var step in Model.Steps)
                    {
                        <li>
                            <strong>@Html.DisplayFor(stepItem => step.Name)</strong>
                            <p>@Html.DisplayFor(stepstepItem => step.Description)</p>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
    <div id="recipe-details-bottom">
        <div id="recipe-details-bottom-left">
            <h5>@Html.DisplayNameFor(model => model.Author)</h5>
            <p>@Html.ValueFor(model => model.Author.Name)</p>
            <hr/>
            <h5>@Html.DisplayNameFor(model => model.DifficultyLevel)</h5>
            <p>@Html.ValueFor(model => model.DifficultyLevel)</p>
        </div>
        <div id="recipe-details-bottom-right">
            <h5>@Html.DisplayNameFor(model => model.Popularity)</h5>
            @Html.ValueFor(model => model.Popularity)
            <hr/>
            <h5>@Html.DisplayNameFor(model => model.Rating)</h5>
            <p>@Html.ValueFor(model => model.Rating)</p>
        </div>
    </div>
    <br/>
    <div class="btn-group" id="recipe-details-action-buttons">
        @Html.ActionLink("Edit", "Edit", new {id = Model.Id}, new {@class = "btn btn-info"})
        @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-default"})
    </div>
</div>