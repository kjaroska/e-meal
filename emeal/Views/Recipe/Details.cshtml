@model emeal.Models.Recipe
@{ ViewBag.Title = Html.DisplayFor(model => model.Name); }

<div id="recipe-details">
    <div id="recipe-details-top">
        <img class="img-responsive" src="@Html.ValueFor(model => model.PathToImage)" alt="Meal image"/>
        <section class="recipe-details-info-bar">
            <p class="recipe-details-info-bar-author">
                <span class="glyphicon glyphicon-user"></span> @Html.ValueFor(model => model.Author.Name)
            </p>
            <p class="recipe-details-info-bar-difficulty">
                <span class="glyphicon glyphicon-stats"></span> @Html.ValueFor(model => model.DifficultyLevel)
            </p>
            <p class="recipe-details-info-bar-time">
                <span class="glyphicon glyphicon-time"></span> @Html.ValueFor(model => model.EstimatedTime)
            </p>
            <p class="recipe-details-info-bar-popularity">
                <span class="glyphicon glyphicon-thumbs-up"></span> @Html.ValueFor(model => model.Popularity)
            </p>
            <p class="recipe-details-info-bar-rating">
                <span class="glyphicon glyphicon-star"></span> @Html.ValueFor(model => model.Rating)
            </p>
        </section>
    </div>

    <div id="recipe-details-middle">
        <h2>
            <strong>@Html.ValueFor(model => model.Name)</strong>
        </h2>
        <h4>
            <strong>@Html.ValueFor(model => model.Description)</strong>
        </h4>
     </div>

    <div id="recipe-details-bottom">
        <section class="recipe-details-prepare">
            <p class="reciepe-details-prepare-ingredients">
                <h2>Składniki</h2>
                @if (Model.Ingredients.Count != 0)
                    {
                        <ul>
                            @foreach (var ingredient in Model.Ingredients)
                            {
                                <li>
                                    <span class="font-bold">@Html.DisplayFor(ingredientItem => ingredient.Product.Name)</span>,
                                        @Html.DisplayFor(ingredientItem => ingredient.Amount)
                                        @Html.DisplayFor(ingredientItem => ingredient.UnitType)
                                </li>
                            }
                        </ul>
                    }

            </p>

            <p class="recipe-details-prepare-steps">
                <h2>Steps</h2>

            </p>
        </section>
    </div>


        @*<div class="dropdown" id="ingredient-dropdown">
            <button class="btn btn-lg btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                @Html.DisplayNameFor(model => model.Ingredients)
                <span class="caret"></span>
            </button>
            @if (Model.Ingredients.Count != 0)
            {
                <ul class="dropdown-menu dropdown-menu-right ingredient-dropdown-content">
                    @foreach (var ingredient in Model.Ingredients)
                    {
                        <li>
                            <span class="font-bold">@Html.DisplayFor(ingredientItem => ingredient.Product.Name)</span>
                            <p>
                                @Html.DisplayFor(ingredientItem => ingredient.Amount)
                                @Html.DisplayFor(ingredientItem => ingredient.UnitType)</p>
                        </li>
                    }
                </ul>
            }
        </div>


        <div class="dropdown" id="step-dropdown">
            <button class="btn btn-lg btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                @Html.DisplayNameFor(modelItem => Model.Steps)
                <span class="caret"></span>
            </button>
            @if (Model.Steps.Count != 0)
            {
                <ul class="dropdown-menu dropdown-menu-right step-dropdown-content">
                    @foreach (var step in Model.Steps)
                    {
                        <li>
                            <span class="font-bold">@Html.DisplayFor(stepItem => step.Name)</span>
                            <p>@Html.DisplayFor(stepItem => step.Description)</p>
                        </li>
                    }
                </ul>
            }
        </div>*@

    </div>
    <br/>
    <div class="btn-group" id="recipe-details-action-buttons">
        @Html.ActionLink("Edit", "Edit", new {id = Model.Id}, new {@class = "btn btn-info"})
        @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-default"})
    </div>
